<html>
<head>
<meta charset="utf-8"/>
</head>
<body>
<h1>网站分析的那点事:如何辨别PV,UV,Visit的区别</h1>
<div class="detail" id="ctrlfscont">
<p>PV，UV，Visit，恩，这些不都是我们在网站分析中所使用的最基本的几项数据指标，甚至是外行人也常常会把它们挂在嘴上，互联网从业者以致爱好者更是没有不知道这三项指标含义的。但要真说这三个指标是如何度量的，其间有哪些细微差别，相信不是每个人都能了解得十分清楚，确切。然而做网站分析又是一件需要极细致的工作，哪怕是最微小细节的不清楚或是误判都会带来决策判断上的偏差，因此，今天分享一下这三个指标的度量方法，把这些基础知识与各位再共同复习一遍。</p>
<p><strong>PV – Page View</strong></p>
<p>PV的意思就是Page View，中文翻译即页面浏览。其具体的度量方法就是从浏览器发出一个对网络服务器的请求（Request），网络服务器接到这个请求后，会将该请求对应的一个网页（Page）发送给浏览器，从而产生了一个PV。那么在这里只要是这个请求发送给了浏览器，无论这个页面是否完全打开（下载完成），那么都是应当计为1个PV。（当然这一点在实际操作中通常以你的统计代码被调用执行作为计数点）</p>
<p>PV（Page View）还有一些其他的说法，如：Page Impression 或 Impression。</p>
<p>好了，有关PV其实就是这么简单。</p>
<p><strong>Visit</strong></p>
<p>Visit中文翻译即访问。当你访问到一个网站时，你就是一个访问者（Visitor），你可能只访问1个页面，也可能东看西看走了N多个页面，那么当你完成浏览这个网站的行为最终关掉这个网站所有页面离开时，那么你就对这个网站完成了一次访问（Visit）。</p>
<p>Visit的定义其实很容易理解，但在实际的网站分析工具统计中却并不那么容易分辨了。</p>
<p>比如，你在网站上连续看了5分钟，然后突然有电话叫你出去，于是你离开了20分钟，回来后你又继续在这个网站上看起来。那么这样的一个行为到底算1次Visit还是2次Visit呢？如果算1次Visit，那么其实你中间已经有20分钟的间隔离开了电脑，并非连续的访问行为了；但如果计算2次Visit，你确实在离开前后没有关闭这个页面，又还是同一个人，这该如何处理呢？</p>
<p>这种情况的处理，通常要看网站分析工具对Visit的定义了，通常如果我们定义1个Visit是一系列在网站上浏览点动鼠标的动作，且两个点击你网站页面超链接的时间间隔不超过30分钟。OK，如上面例子所陈述的情况，那么你如果只离开了20分钟，仍然会算做1个Visit。如果你的网站分析工具对Visit的定义中两个点击网站页面链接的间隔为10分钟，那么上述情况就要被算所2个Visit咯。</p>
<p>怎么样，这样该了解Visit是如何被计算的吧？</p>
<p><strong>UV – Unique Visitor</strong></p>
<p>UV的意思就是Unique Visitor，中文翻译即唯一访问者。访问者很好理解，那么为什么还要标明是唯一访问者呢？</p>
<p>如上一段在解释Visit时所引用的例子，那么假设你Visit的时间定义是30分钟，而你在间隔了40分钟访问了这个网站。此时，网站分析工具会显示有2个Visit，但这2个Visit是由你这同一人完成的，你是这2个Visit记录的唯一访问者，因此网站分析工具会显示有1个UV。</p>
<p>因此，如果你的1个页面有100次的访问，那么很有可能不是来自100个不同的访问者，可能在这其中有些访问者贡献了2次甚至更多的访问，那么对于这个页面的UV一定是小于等于100的。</p>
<p><strong>UV又是如何被度量的呢？</strong></p>
<p>1. 网站服务器分辨</p>
<p>网站服务器会接收到很多页面请求，每次请求的信息内部都包含了你电脑的一些信息，比如：IP地址，请求发出的时间，浏览器版本，操作系统版本等等。网站服务器对这些请求进行分析，如果这些请求满足一些共同特征，比如来自同一个IP地址，且浏览器版本，操作系统版本相同，请求时间又相近等等，如果满足这一系列的定义，那么就可以认为这些请求是来自于同一个Visitor的，那么这些访问自然是产生1个UV。当然，共同特征的该如何定义是由网站服务器的设置决定的。通常来讲，用IP地址+其他特征共同来定义的情况比较多见。</p>
<p>2. 用Cookie分辨</p>
<p>当客户端第一次访问某个网站服务器的时候，网站服务器会给这个客户端的电脑发出一个Cookie，通常放在这个客户端电脑的C盘当中。在这个Cookie中会分配一个独一无二的编号，这其中会记录一些访问服务器的信息，如访问时间，访问了哪些页面等等。当你下次再访问这个服务器的时候，服务器就可以直接从你的电脑中找到上一次放进去的Cookie文件，并且对其进行一些更新，但那个独一无二的编号是不会变的。如果在一定时间内，服务器发现2个Visit所对应的是一个编号，那么我们自然可以认为这个来源于同一个Visitor了，自然也就是1个UV。</p>
<p>使用Cookie的方法要比第一个更精确些。但也存在一些问题，比如：有的客户端为保证更高级别的安全，关闭了Cookie的功能；或者是有些客户端设置了在退出页面时自动删除Cookie，亦或你经常自己去手动删除Cookie，那么这个方法就不那么精确了。</p>
<p>由此看来，两个方法都只能得到近似的UV，而不是绝对精确的。但在浩如烟海的访问数据中，能计量出这些数据对我们的网站分析工作已经是可以有所指导并用于分析使用了。了解了这些数据的实际度量方法，有利于我们更加真实地还原用户的使用行为，让我们对网站真实的使用情况了解得更清楚。</p>
<p>原文地址：<a href="http://www.wenbin.me/webanalytics/web-analytics-about-pv-uv-visit.html">http://www.wenbin.me/webanalytics/web-analytics-about-pv-uv-visit.html</a>&nbsp;</p><div style="font-size: 0px; height: 0px; clear: both;"></div>
</div>